DROP TABLE IF EXISTS ACCOUNT;
DROP TABLE IF EXISTS TRANSFER;
DROP TABLE IF EXISTS TRANSFER_SCHEDULE;

DROP SEQUENCE IF EXISTS ACCOUNT_ID_SEQ;
DROP SEQUENCE IF EXISTS TRANSFER_ID_SEQ;
DROP SEQUENCE IF EXISTS TRANS_ID_SEQ;
DROP SEQUENCE IF EXISTS TRANS_SCH_ID_SEQ;


CREATE SEQUENCE ACCOUNT_ID_SEQ INCREMENT BY 1 MINVALUE 100000;
CREATE SEQUENCE TRANSFER_ID_SEQ INCREMENT BY 1 MINVALUE 100000;
CREATE SEQUENCE TRANS_ID_SEQ INCREMENT BY 1 MINVALUE 10000000;
CREATE SEQUENCE TRANS_SCH_ID_SEQ INCREMENT BY 1 MINVALUE 1;


CREATE TABLE ACCOUNT(ID BIGINT DEFAULT ACCOUNT_ID_SEQ.NEXTVAL PRIMARY KEY, ALIAS VARCHAR(100), TYPE VARCHAR(20), BALANCE DECIMAL(10,2), CURRENCY VARCHAR(3), OPEN_DATE DATETIME, STATUS VARCHAR(10) DEFAULT 'ACTIVE');
CREATE TABLE TRANSFER(ID BIGINT DEFAULT TRANSFER_ID_SEQ.NEXTVAL PRIMARY KEY, FROM_ACCT BIGINT, TO_ACCT BIGINT, AMOUNT DECIMAL(10,2), CURRENCY VARCHAR(3), TRANS_DATE DATETIME, TRANS_ID BIGINT DEFAULT TRANS_ID_SEQ.NEXTVAL, STATUS VARCHAR(10), FOREIGN KEY(FROM_ACCT) REFERENCES ACCOUNT(ID), FOREIGN KEY(TO_ACCT) REFERENCES ACCOUNT(ID));
CREATE TABLE TRANSFER_SCHEDULE(ID BIGINT DEFAULT TRANS_SCH_ID_SEQ.NEXTVAL PRIMARY KEY, FROM_ACCT BIGINT, TO_ACCT BIGINT, AMOUNT DECIMAL(10,2), CURRENCY VARCHAR(3), SCH_TRANSFER_DATE DATE, TRANS_ID BIGINT DEFAULT TRANS_ID_SEQ.NEXTVAL, STATUS VARCHAR(10), FOREIGN KEY(FROM_ACCT) REFERENCES ACCOUNT(ID), FOREIGN KEY(TO_ACCT) REFERENCES ACCOUNT(ID));


